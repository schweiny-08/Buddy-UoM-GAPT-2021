@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html>
<head>
    <!-- https://developers.google.com/maps/documentation/javascript/examples/map-simple#all -->
    <title>Simple Map</title>
    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <style type="text/css">
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 400px;
            width: 800px;
        }
    </style>
    <script>

        //Creating the map centred over UOM with default zoom level 15
        function initMap() {
            const ict = new google.maps.LatLng(35.901810199007215, 14.485197413626922);
            const map = new google.maps.Map(document.getElementById("map"), {
                center: ict,
                zoom: 15,
            });
            //variable to hold the optional info window displaying zoom level, latlng, world, pixel and tile coordinates
            const coordInfoWindow = new google.maps.InfoWindow();
            coordInfoWindow.setContent(createInfoWindowContent(ict, map.getZoom()));
            coordInfoWindow.setPosition(ict);
            coordInfoWindow.open(map);
            //event listener that fires when zoom level changes
            map.addListener("zoom_changed", () => {
                coordInfoWindow.setContent(
                    createInfoWindowContent(ict, map.getZoom())
                );
                coordInfoWindow.open(map);
            });
            //setting the bounds of UOM. Bounds [zoom][coord.x][coord.y]
            //bounds are generated from map tiler folder structure when tiles are created
            const bounds = {
                15: [
                    [17701, 17702],
                    [12878, 12878],
                ],
                16: [
                    [35403, 35405],
                    [25756, 25757],
                ],

            };

            //https://developers.google.com/maps/documentation/javascript/examples/maptype-image-overlay#maps_maptype_image_overlay-javascript
            //creating the imageMapType for the image to be overlayed over the map
            const imageMapType = new google.maps.ImageMapType({
                getTileUrl: function (coord, zoom) {
                    //if statement to not render the image if outside the bounds or outside the max/min zoom levels
                    if (
                        zoom < 15 ||
                        zoom > 16 ||
                        bounds[zoom][0][0] > coord.x ||
                        coord.x > bounds[zoom][0][1] ||
                        bounds[zoom][1][0] > coord.y ||
                        coord.y > bounds[zoom][1][1]
                    ) {
                        return "";
                    }
                    //returning the required tiles by requesting the specific png images
                    //link is according to the port being used 
                    return [
                        "https://localhost:44379/images/PngTiles/",
                        zoom,
                        "/",
                        coord.x,
                        "/",
                        coord.y,
                        ".png",
                    ].join("");
                },
                tileSize: new google.maps.Size(256, 256),
            });
            map.overlayMapTypes.push(imageMapType);
        }
        const TILE_SIZE = 256;

        //https://developers.google.com/maps/documentation/javascript/examples/map-coordinates#all
        //funtion to create info window
        function createInfoWindowContent(latLng, zoom) {
            const scale = 1 << zoom;
            const worldCoordinate = project(latLng);
            const pixelCoordinate = new google.maps.Point(
                Math.floor(worldCoordinate.x * scale),
                Math.floor(worldCoordinate.y * scale)
            );
            const tileCoordinate = new google.maps.Point(
                Math.floor((worldCoordinate.x * scale) / TILE_SIZE),
                Math.floor((worldCoordinate.y * scale) / TILE_SIZE)
            );
            return [
                "University of Malta, MT",
                "LatLng: " + latLng,
                "Zoom level: " + zoom,
                "World Coordinate: " + worldCoordinate,
                "Pixel Coordinate: " + pixelCoordinate,
                "Tile Coordinate: " + tileCoordinate,
            ].join("<br>");
        }

        //https://developers.google.com/maps/documentation/javascript/examples/map-coordinates#all
        //function to return world coordinates when supplying latlng
        function project(latLng) {
            let siny = Math.sin((latLng.lat() * Math.PI) / 180);
            // Truncating to 0.9999 effectively limits latitude to 89.189. This is
            // about a third of a tile past the edge of the world tile.
            siny = Math.min(Math.max(siny, -0.9999), 0.9999);
            return new google.maps.Point(
                TILE_SIZE * (0.5 + latLng.lng() / 360),
                TILE_SIZE * (0.5 - Math.log((1 + siny) / (1 - siny)) / (4 * Math.PI))
            );
        }
    </script>
</head>
<body>
    <div id="map"></div>

<!-- calling the google maps api using a custom API key. CHECK IF SAME KEY WORKS ACROSS DIFFERENT DEVICES!! -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyChmvdq02aq8Sa68jTYFghQZz_1LFFUp8o&callback=initMap&libraries=&v=weekly"
            async></script>
</body>
</html>

